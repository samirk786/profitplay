"use strict";(()=>{var e={};e.id=820,e.ids=[820],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},96692:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>y,originalPathname:()=>w,patchFetch:()=>S,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>k,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>_});var s={};a.r(s),a.d(s,{GET:()=>p});var o=a(95419),r=a(69108),n=a(99678),d=a(78070),i=a(3214),l=a(25864);async function p(e){try{let{searchParams:t}=new URL(e.url),a=t.get("sport"),s=t.get("marketType"),o=t.get("date");if("true"===t.get("refresh")&&a&&"ALL"!==a)try{let e={NBA:"basketball_nba",NFL:"americanfootball_nfl",MLB:"baseball_mlb",NHL:"icehockey_nhl",SOCCER:"soccer_epl"}[a]||"basketball_nba";await l.s.fetchOdds(e),"NFL"===a&&await l.s.fetchPlayerProps(e)}catch(e){console.warn("Failed to refresh odds data:",e)}let r={status:"UPCOMING"};if(a&&"ALL"!==a&&(r.sport=a),s&&"ALL"!==s&&["MONEYLINE","SPREAD","TOTAL","PROPS","PLAYER_PASS_TDS","PLAYER_PASS_YDS","PLAYER_PASS_COMPLETIONS","PLAYER_RUSH_YDS","PLAYER_RUSH_ATT","PLAYER_REC_YDS","PLAYER_REC_RECEPTIONS","PLAYER_REC_TDS"].includes(s)&&(r.marketType=s),o){let e=new Date(o),t=new Date(e);t.setDate(t.getDate()+1),r.startTime={gte:e,lt:t}}let n=[];if(s&&s.startsWith("PLAYER_"))n=[{id:`mock_${Date.now()}_1`,sport:a||"NFL",league:"National Football League",eventId:`player_props_${Date.now()}_1`,marketType:s,participants:["Josh Allen","Buffalo Bills"],startTime:new Date(Date.now()+864e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:276.5,odds:-110},under:{total:276.5,odds:-110}},ts:new Date}]},{id:`mock_${Date.now()}_2`,sport:a||"NFL",league:"National Football League",eventId:`player_props_${Date.now()}_2`,marketType:s,participants:["Christian McCaffrey","San Francisco 49ers"],startTime:new Date(Date.now()+864e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:96.5,odds:-105},under:{total:96.5,odds:-115}},ts:new Date}]}];else try{n=await i._.market.findMany({where:r,include:{oddsSnapshots:{where:{ts:{gte:new Date(Date.now()-18e5)}},orderBy:{ts:"desc"},take:1}},orderBy:{startTime:"asc"}}),(0===n.length||n.every(e=>!e.oddsSnapshots||0===e.oddsSnapshots.length))&&(console.log("No markets with odds found, using mock data"),n=m())}catch(e){console.warn("Database query failed, returning mock data:",e),n=m()}let p=e=>isNaN(e)||!isFinite(e)?0:Math.round(100*e)/100,c=e=>isNaN(e)||!isFinite(e)?0:Math.round(10*e)/10,u=e=>isNaN(e)||!isFinite(e)?0:e,h=n.map(e=>{let t=e.oddsSnapshots[0]?.lineJSON||null;return t&&(t.home&&"number"==typeof t.home&&(t.home=p(t.home)),t.away&&"number"==typeof t.away&&(t.away=p(t.away)),t.over&&t.over.odds&&(t.over.odds=p(t.over.odds),t.over.total=u(t.over.total)),t.under&&t.under.odds&&(t.under.odds=p(t.under.odds),t.under.total=u(t.under.total)),t.home&&"object"==typeof t.home&&t.home.odds&&(t.home.odds=p(t.home.odds),t.home.spread=c(t.home.spread)),t.away&&"object"==typeof t.away&&t.away.odds&&(t.away.odds=p(t.away.odds),t.away.spread=c(t.away.spread))),{id:e.id,sport:e.sport,league:e.league,eventId:e.eventId,marketType:e.marketType,participants:e.participants,startTime:e.startTime,status:e.status,odds:t,lastUpdated:e.oddsSnapshots[0]?.ts||null}});return d.Z.json({markets:h})}catch(e){return console.error("Markets fetch error:",e),d.Z.json({error:"Internal server error"},{status:500})}}function m(){return[{id:"mock_nba_1",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-1",marketType:"MONEYLINE",participants:["Los Angeles Lakers","Golden State Warriors"],startTime:new Date(Date.now()+864e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:-150,away:130},ts:new Date}]},{id:"mock_nba_2",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-2",marketType:"SPREAD",participants:["Los Angeles Lakers","Golden State Warriors"],startTime:new Date(Date.now()+864e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:{spread:-3.5,odds:-110},away:{spread:3.5,odds:-110}},ts:new Date}]},{id:"mock_nba_3",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-3",marketType:"TOTAL",participants:["Los Angeles Lakers","Golden State Warriors"],startTime:new Date(Date.now()+864e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:220.5,odds:-110},under:{total:220.5,odds:-110}},ts:new Date}]},{id:"mock_nba_4",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-4",marketType:"MONEYLINE",participants:["Boston Celtics","Miami Heat"],startTime:new Date(Date.now()+9e7),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:-120,away:100},ts:new Date}]},{id:"mock_nba_5",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-5",marketType:"SPREAD",participants:["Boston Celtics","Miami Heat"],startTime:new Date(Date.now()+9e7),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:{spread:-2.5,odds:-105},away:{spread:2.5,odds:-115}},ts:new Date}]},{id:"mock_nba_6",sport:"NBA",league:"National Basketball Association",eventId:"nba-mock-6",marketType:"TOTAL",participants:["Boston Celtics","Miami Heat"],startTime:new Date(Date.now()+9e7),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:215.5,odds:-105},under:{total:215.5,odds:-115}},ts:new Date}]},{id:"mock_nfl_1",sport:"NFL",league:"National Football League",eventId:"nfl-mock-1",marketType:"MONEYLINE",participants:["Kansas City Chiefs","Buffalo Bills"],startTime:new Date(Date.now()+936e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:-140,away:120},ts:new Date}]},{id:"mock_nfl_2",sport:"NFL",league:"National Football League",eventId:"nfl-mock-2",marketType:"SPREAD",participants:["Kansas City Chiefs","Buffalo Bills"],startTime:new Date(Date.now()+936e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:{spread:-3.5,odds:-110},away:{spread:3.5,odds:-110}},ts:new Date}]},{id:"mock_nfl_3",sport:"NFL",league:"National Football League",eventId:"nfl-mock-3",marketType:"TOTAL",participants:["Kansas City Chiefs","Buffalo Bills"],startTime:new Date(Date.now()+936e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:52.5,odds:-110},under:{total:52.5,odds:-110}},ts:new Date}]},{id:"mock_mlb_1",sport:"MLB",league:"Major League Baseball",eventId:"mlb-mock-1",marketType:"MONEYLINE",participants:["New York Yankees","Boston Red Sox"],startTime:new Date(Date.now()+972e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:-110,away:-110},ts:new Date}]},{id:"mock_mlb_2",sport:"MLB",league:"Major League Baseball",eventId:"mlb-mock-2",marketType:"SPREAD",participants:["New York Yankees","Boston Red Sox"],startTime:new Date(Date.now()+972e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:{spread:-1.5,odds:-120},away:{spread:1.5,odds:100}},ts:new Date}]},{id:"mock_mlb_3",sport:"MLB",league:"Major League Baseball",eventId:"mlb-mock-3",marketType:"TOTAL",participants:["New York Yankees","Boston Red Sox"],startTime:new Date(Date.now()+972e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:8.5,odds:-105},under:{total:8.5,odds:-115}},ts:new Date}]},{id:"mock_nhl_1",sport:"NHL",league:"National Hockey League",eventId:"nhl-mock-1",marketType:"MONEYLINE",participants:["Toronto Maple Leafs","Montreal Canadiens"],startTime:new Date(Date.now()+1008e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:-130,away:110},ts:new Date}]},{id:"mock_nhl_2",sport:"NHL",league:"National Hockey League",eventId:"nhl-mock-2",marketType:"SPREAD",participants:["Toronto Maple Leafs","Montreal Canadiens"],startTime:new Date(Date.now()+1008e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{home:{spread:-1.5,odds:-110},away:{spread:1.5,odds:-110}},ts:new Date}]},{id:"mock_nhl_3",sport:"NHL",league:"National Hockey League",eventId:"nhl-mock-3",marketType:"TOTAL",participants:["Toronto Maple Leafs","Montreal Canadiens"],startTime:new Date(Date.now()+1008e5),status:"UPCOMING",oddsSnapshots:[{lineJSON:{over:{total:6.5,odds:-110},under:{total:6.5,odds:-110}},ts:new Date}]}]}let c=new o.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/markets/route",pathname:"/api/markets",filename:"route",bundlePath:"app/api/markets/route"},resolvedPagePath:"/Users/samirkassam/Desktop/PP2/profitplay/app/api/markets/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:u,staticGenerationAsyncStorage:h,serverHooks:k,headerHooks:y,staticGenerationBailout:_}=c,w="/api/markets/route";function S(){return(0,n.patchFetch)({serverHooks:k,staticGenerationAsyncStorage:h})}},25864:(e,t,a)=>{a.d(t,{s:()=>o});class s{constructor(){if(this.baseUrl="https://api.the-odds-api.com/v4",this.apiKey=process.env.ODDS_API_KEY||"",!this.apiKey)throw Error("ODDS_API_KEY environment variable is required")}async fetchOdds(e,t=["h2h","spreads","totals"]){try{let a=new URLSearchParams({apiKey:this.apiKey,sport:e,markets:t.join(","),regions:"us",oddsFormat:"american",dateFormat:"iso"}),s=await fetch(`${this.baseUrl}/sports/${e}/odds/?${a}`);if(!s.ok)throw Error(`Odds API error: ${s.status} ${s.statusText}`);let o=await s.json();return this.processOddsData(o)}catch(e){throw console.error("Error fetching odds:",e),e}}async fetchPlayerProps(e){try{return console.log(`Creating mock player props data for ${e}`),[{eventId:`player_props_${Date.now()}_1`,sport:this.mapSportName(e),league:"Player Props",participants:["Josh Allen","Buffalo Bills"],startTime:new Date(Date.now()+864e5),markets:[{marketType:"PLAYER_PASS_YDS",bookmaker:"DraftKings",odds:{over:{total:276,odds:-110},under:{total:276,odds:-110}}}]},{eventId:`player_props_${Date.now()}_2`,sport:this.mapSportName(e),league:"Player Props",participants:["Christian McCaffrey","San Francisco 49ers"],startTime:new Date(Date.now()+864e5),markets:[{marketType:"PLAYER_RUSH_YDS",bookmaker:"DraftKings",odds:{over:{total:96,odds:-105},under:{total:96,odds:-115}}}]}]}catch(e){throw console.error("Error fetching player props:",e),e}}async fetchSports(){try{let e=await fetch(`${this.baseUrl}/sports/?apiKey=${this.apiKey}`);if(!e.ok)throw Error(`Sports API error: ${e.status} ${e.statusText}`);return await e.json()}catch(e){throw console.error("Error fetching sports:",e),e}}processPlayerPropsData(e){return e.map(e=>{let t=[e.away_team,e.home_team],a=new Date(e.commence_time),s=e.bookmakers.flatMap(e=>e.markets.map(t=>({marketType:this.mapPlayerPropsMarketType(t.key),bookmaker:e.title,odds:this.processPlayerPropsOutcomes(t.outcomes,t.key)})));return{eventId:e.id,sport:this.mapSportName(e.sport_title),league:e.sport_title,participants:t,startTime:a,markets:s}})}processOddsData(e){return e.map(e=>{let t=[e.away_team,e.home_team],a=new Date(e.commence_time),s=e.bookmakers.flatMap(e=>e.markets.map(t=>({marketType:this.mapMarketType(t.key),bookmaker:e.title,odds:this.processMarketOutcomes(t.outcomes,t.key)})));return{eventId:e.id,sport:this.mapSportName(e.sport_title),league:e.sport_title,participants:t,startTime:a,markets:s}})}mapMarketType(e){return({h2h:"MONEYLINE",spreads:"SPREAD",totals:"TOTAL",btts:"PROPS"})[e]||"PROPS"}mapPlayerPropsMarketType(e){return({player_pass_tds:"PLAYER_PASS_TDS",player_pass_yds:"PLAYER_PASS_YDS",player_pass_completions:"PLAYER_PASS_COMPLETIONS",player_rush_yds:"PLAYER_RUSH_YDS",player_rush_att:"PLAYER_RUSH_ATT",player_rec_yds:"PLAYER_REC_YDS",player_rec_receptions:"PLAYER_REC_RECEPTIONS",player_rec_tds:"PLAYER_REC_TDS"})[e]||"PLAYER_PROPS"}mapSportName(e){return({Basketball:"NBA","American Football":"NFL",Baseball:"MLB",Soccer:"SOCCER",Hockey:"NHL",Tennis:"TENNIS"})[e]||e.toUpperCase()}processMarketOutcomes(e,t){return"h2h"===t?{home:this.roundOdds(e.find(t=>t.name===e[1]?.name)?.price||0),away:this.roundOdds(e.find(t=>t.name===e[0]?.name)?.price||0)}:"spreads"===t?{home:{spread:this.roundSpread(e.find(t=>t.name===e[1]?.name)?.point||0),odds:this.roundOdds(e.find(t=>t.name===e[1]?.name)?.price||0)},away:{spread:this.roundSpread(e.find(t=>t.name===e[0]?.name)?.point||0),odds:this.roundOdds(e.find(t=>t.name===e[0]?.name)?.price||0)}}:"totals"===t?{over:{total:this.preserveDecimal(e.find(e=>e.name.includes("Over"))?.point||0),odds:this.roundOdds(e.find(e=>e.name.includes("Over"))?.price||0)},under:{total:this.preserveDecimal(e.find(e=>e.name.includes("Under"))?.point||0),odds:this.roundOdds(e.find(e=>e.name.includes("Under"))?.price||0)}}:e}processPlayerPropsOutcomes(e,t){let a=e.find(e=>e.name.includes("Over")||e.name.includes("o")),s=e.find(e=>e.name.includes("Under")||e.name.includes("u"));return a&&s?{over:{total:this.preserveDecimal(a.point||0),odds:this.roundOdds(a.price||0)},under:{total:this.preserveDecimal(s.point||0),odds:this.roundOdds(s.price||0)}}:e}roundOdds(e){return Math.round(100*e)/100}roundSpread(e){return isNaN(e)||!isFinite(e)?0:Math.round(10*e)/10}preserveDecimal(e){return isNaN(e)||!isFinite(e)?0:e}async checkUsage(){try{let e=await fetch(`${this.baseUrl}/sports/?apiKey=${this.apiKey}`);if(!e.ok)throw Error(`Usage API error: ${e.status} ${e.statusText}`);return{used:1,remaining:499}}catch(e){throw console.error("Error checking API usage:",e),e}}}let o=new s},3214:(e,t,a)=>{a.d(t,{_:()=>o});var s=a(53524);let o=globalThis.prisma??new s.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[638,206],()=>a(96692));module.exports=s})();