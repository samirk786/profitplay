"use strict";(()=>{var t={};t.id=240,t.ids=[240],t.modules={53524:t=>{t.exports=require("@prisma/client")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},58944:(t,e,a)=>{a.r(e),a.d(e,{headerHooks:()=>P,originalPathname:()=>_,patchFetch:()=>D,requestAsyncStorage:()=>S,routeModule:()=>h,serverHooks:()=>T,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>w});var n={};a.r(n),a.d(n,{GET:()=>c,POST:()=>E,PUT:()=>A});var r=a(95419),s=a(69108),i=a(99678),l=a(78070),o=a(3214),u=a(41209),d=a(63235);async function c(t){try{let{searchParams:e}=new URL(t.url),a=e.get("status")||"OPEN",n=e.get("marketId"),r={status:a};n&&(r.marketId=n);let s=await o._.bet.findMany({where:r,include:{market:!0,challengeAccount:{include:{user:!0,ruleset:!0}},oddsSnapshot:!0},orderBy:{placedAt:"desc"}});return l.Z.json({bets:s})}catch(t){return console.error("Settlements fetch error:",t),l.Z.json({error:"Internal server error"},{status:500})}}async function E(t){try{let{betId:e,result:a,adminUserId:n}=await t.json();if(!e||!a||!["WON","LOST","PUSH"].includes(a))return l.Z.json({error:"Invalid settlement data"},{status:400});let r=await o._.bet.findUnique({where:{id:e},include:{market:!0,challengeAccount:{include:{ruleset:!0}},oddsSnapshot:!0}});if(!r)return l.Z.json({error:"Bet not found"},{status:404});if("OPEN"!==r.status)return l.Z.json({error:"Bet is already settled"},{status:400});let s=(0,u.tq)({stake:r.stake,potentialPayout:r.potentialPayout,status:a}),i=await o._.bet.update({where:{id:e},data:{status:a,settledAt:new Date}});await o._.settlement.create({data:{betId:r.id,resultJSON:{result:a,pnl:s,settledAt:new Date().toISOString()},source:"manual",ts:new Date}});let c=r.challengeAccount.equity+s,E=Math.max(r.challengeAccount.highWaterMark,c);await o._.challengeAccount.update({where:{id:r.challengeAccountId},data:{equity:c,highWaterMark:E}});let A=await (0,u.HJ)(r.challengeAccountId,s);return A.newState&&await (0,u.Ti)(r.challengeAccountId,A.newState,"PASSED"===A.newState?new Date:void 0),await (0,d.U)({userId:n,action:d.A.ADMIN_ACTION,payload:{action:"BET_SETTLED",betId:r.id,result:a,pnl:s,newEquity:c,ruleViolations:A.violations}}),l.Z.json({success:!0,bet:i,pnl:s,newEquity:c,ruleCheck:A})}catch(t){return console.error("Settlement error:",t),l.Z.json({error:"Internal server error"},{status:500})}}async function A(t){try{let{betId:e,newResult:a,adminUserId:n}=await t.json();if(!e||!a||!["WON","LOST","PUSH"].includes(a))return l.Z.json({error:"Invalid settlement data"},{status:400});let r=await o._.bet.findUnique({where:{id:e},include:{market:!0,challengeAccount:{include:{ruleset:!0}},oddsSnapshot:!0}});if(!r)return l.Z.json({error:"Bet not found"},{status:404});if("OPEN"===r.status)return l.Z.json({error:"Bet is not settled yet"},{status:400});let s=(0,u.tq)({stake:r.stake,potentialPayout:r.potentialPayout,status:r.status}),i=(0,u.tq)({stake:r.stake,potentialPayout:r.potentialPayout,status:a}),c=i-s,E=await o._.bet.update({where:{id:e},data:{status:a}});await o._.settlement.updateMany({where:{betId:r.id},data:{resultJSON:{result:a,pnl:i,settledAt:new Date().toISOString(),updatedAt:new Date().toISOString()}}});let A=r.challengeAccount.equity+c,h=Math.max(r.challengeAccount.highWaterMark,A);await o._.challengeAccount.update({where:{id:r.challengeAccountId},data:{equity:A,highWaterMark:h}});let S=await (0,u.HJ)(r.challengeAccountId,c);return S.newState&&await (0,u.Ti)(r.challengeAccountId,S.newState,"PASSED"===S.newState?new Date:void 0),await (0,d.U)({userId:n,action:d.A.ADMIN_ACTION,payload:{action:"BET_SETTLEMENT_UPDATED",betId:r.id,oldResult:r.status,newResult:a,pnlDifference:c,newEquity:A,ruleViolations:S.violations}}),l.Z.json({success:!0,bet:E,pnlDifference:c,newEquity:A,ruleCheck:S})}catch(t){return console.error("Settlement update error:",t),l.Z.json({error:"Internal server error"},{status:500})}}let h=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/admin/settlements/route",pathname:"/api/admin/settlements",filename:"route",bundlePath:"app/api/admin/settlements/route"},resolvedPagePath:"/Users/samirkassam/Desktop/PP2/profitplay/app/api/admin/settlements/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:S,staticGenerationAsyncStorage:p,serverHooks:T,headerHooks:P,staticGenerationBailout:w}=h,_="/api/admin/settlements/route";function D(){return(0,i.patchFetch)({serverHooks:T,staticGenerationAsyncStorage:p})}},63235:(t,e,a)=>{a.d(e,{A:()=>s,U:()=>r});var n=a(3214);async function r(t){try{await n._.auditLog.create({data:{userId:t.userId,action:t.action,payload:t.payload,ip:t.ip}})}catch(t){console.error("Failed to create audit log:",t)}}let s={USER_SIGNUP:"USER_SIGNUP",USER_LOGIN:"USER_LOGIN",USER_LOGOUT:"USER_LOGOUT",SUBSCRIPTION_CREATED:"SUBSCRIPTION_CREATED",SUBSCRIPTION_UPDATED:"SUBSCRIPTION_UPDATED",SUBSCRIPTION_CANCELLED:"SUBSCRIPTION_CANCELLED",CHALLENGE_ACCOUNT_CREATED:"CHALLENGE_ACCOUNT_CREATED",CHALLENGE_ACCOUNT_UPDATED:"CHALLENGE_ACCOUNT_UPDATED",BET_PLACED:"BET_PLACED",BET_CANCELLED:"BET_CANCELLED",BET_SETTLED:"BET_SETTLED",RULE_VIOLATION:"RULE_VIOLATION",CHALLENGE_PASSED:"CHALLENGE_PASSED",CHALLENGE_FAILED:"CHALLENGE_FAILED",CHALLENGE_PAUSED:"CHALLENGE_PAUSED",ADMIN_ACTION:"ADMIN_ACTION",PAYOUT_REQUESTED:"PAYOUT_REQUESTED",PAYOUT_APPROVED:"PAYOUT_APPROVED",PAYOUT_REJECTED:"PAYOUT_REJECTED"}},3214:(t,e,a)=>{a.d(e,{_:()=>r});var n=a(53524);let r=globalThis.prisma??new n.PrismaClient},41209:(t,e,a)=>{a.d(e,{HJ:()=>s,Ti:()=>i,cI:()=>l,f9:()=>o,tq:()=>u});var n=a(3214),r=a(53524);async function s(t,e){let a;let s=await n._.challengeAccount.findUnique({where:{id:t},include:{ruleset:!0}});if(!s)throw Error("Challenge account not found");let i=[],l=e;if(void 0===l){let e=new Date;e.setHours(0,0,0,0);let a=new Date(e);a.setDate(a.getDate()+1),l=(await n._.bet.findMany({where:{challengeAccountId:t,settledAt:{gte:e,lt:a},status:{in:["WON","LOST","PUSH"]}}})).reduce((t,e)=>"WON"===e.status?t+(e.potentialPayout-e.stake):"LOST"===e.status?t-e.stake:t,0)}let o=s.ruleset,u=s.equity,d=s.startBalance,c=s.highWaterMark,E=o.maxDailyLossPct/100*d;l<-E&&(i.push(`Daily loss limit exceeded: $${Math.abs(l).toFixed(2)} > $${E.toFixed(2)}`),a=r.ChallengeState.PAUSED);let A=(c-u)/c;A>o.maxDrawdownPct/100&&(i.push(`Maximum drawdown exceeded: ${(100*A).toFixed(2)}% > ${o.maxDrawdownPct}%`),a=r.ChallengeState.FAILED);let h=o.profitTargetPct/100*d;if(u-d>=h&&0===i.length&&(a=r.ChallengeState.PASSED),o.consistencyRule&&o.consistencyPct){let t=u-d;if(t>0){let e=o.consistencyPct/100*t;l>e&&(i.push(`Consistency rule violated: single day profit $${l.toFixed(2)} > $${e.toFixed(2)}`),a=r.ChallengeState.PAUSED)}}return{passed:0===i.length,violations:i,newState:a}}async function i(t,e,a){let r={state:e,updatedAt:new Date};return a&&(r.completedAt=a),await n._.challengeAccount.update({where:{id:t},data:r})}async function l(t,e,a,s){let i=await n._.challengeAccount.findUnique({where:{id:t},include:{ruleset:!0}});if(!i)return{valid:!1,errors:["Challenge account not found"]};let l=[],o=i.ruleset;i.state!==r.ChallengeState.ACTIVE&&l.push("Challenge account is not active");let u=i.equity*(o.maxStakePct/100);return e>u&&l.push(`Stake exceeds maximum allowed: $${e.toFixed(2)} > $${u.toFixed(2)}`),o.allowedMarkets.includes(a)||l.push(`Market type '${a}' is not allowed for this plan`),o.maxOdds&&s>o.maxOdds&&l.push(`Odds exceed maximum allowed: ${s} > ${o.maxOdds}`),e>i.equity&&l.push("Insufficient balance for this stake"),{valid:0===l.length,errors:l}}function o(t,e){return e>0?e/100*t:100/Math.abs(e)*t}function u(t){switch(t.status){case"WON":return t.potentialPayout-t.stake;case"LOST":return-t.stake;default:return 0}}}};var e=require("../../../../webpack-runtime.js");e.C(t);var a=t=>e(e.s=t),n=e.X(0,[638,206],()=>a(58944));module.exports=n})();