"use strict";(()=>{var e={};e.id=607,e.ids=[607],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},71730:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>k,originalPathname:()=>_,patchFetch:()=>f,requestAsyncStorage:()=>u,routeModule:()=>m,serverHooks:()=>y,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>P});var a={};r.r(a),r.d(a,{GET:()=>l,POST:()=>c});var s=r(95419),o=r(69108),n=r(99678),i=r(78070),p=r(3214),d=r(25864);async function c(e){try{let{sport:t="basketball_nba"}=await e.json();console.log(`ðŸ”„ Syncing odds for sport: ${t}`);let r=await d.s.fetchOdds(t);console.log(`ðŸ“Š Fetched ${r.length} events`);let a=0,s=0;for(let e of r){let t=await p._.market.upsert({where:{id:e.eventId},update:{sport:e.sport,league:e.league,participants:e.participants,startTime:e.startTime,status:"UPCOMING"},create:{id:e.eventId,sport:e.sport,league:e.league,eventId:e.eventId,marketType:"MONEYLINE",participants:e.participants,startTime:e.startTime,status:"UPCOMING"}});for(let r of(a++,e.markets))"MONEYLINE"!==r.marketType&&await p._.market.upsert({where:{id:`${e.eventId}-${r.marketType}`},update:{sport:e.sport,league:e.league,participants:e.participants,startTime:e.startTime,status:"UPCOMING"},create:{id:`${e.eventId}-${r.marketType}`,sport:e.sport,league:e.league,eventId:e.eventId,marketType:r.marketType,participants:e.participants,startTime:e.startTime,status:"UPCOMING"}}),await p._.oddsSnapshot.create({data:{marketId:"MONEYLINE"===r.marketType?t.id:`${e.eventId}-${r.marketType}`,bookmaker:r.bookmaker,lineJSON:r.odds}}),s++}console.log(`âœ… Sync complete: ${a} markets, ${s} odds snapshots`);let o=await d.s.checkUsage();return console.log(`ðŸ“ˆ API Usage: ${o.used} used, ${o.remaining} remaining`),i.Z.json({success:!0,stats:{marketsCreated:a,oddsSnapshotsCreated:s,apiUsage:o}})}catch(e){return console.error("Odds sync error:",e),i.Z.json({error:"Failed to sync odds data",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let[e,t]=await Promise.all([d.s.checkUsage(),d.s.fetchSports()]),r=t.filter(e=>e.active);return i.Z.json({apiUsage:e,availableSports:r.map(e=>({key:e.key,title:e.title}))})}catch(e){return console.error("Odds info error:",e),i.Z.json({error:"Failed to fetch odds info",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/odds/sync/route",pathname:"/api/odds/sync",filename:"route",bundlePath:"app/api/odds/sync/route"},resolvedPagePath:"/Users/samirkassam/Desktop/PP2/profitplay/app/api/odds/sync/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:u,staticGenerationAsyncStorage:h,serverHooks:y,headerHooks:k,staticGenerationBailout:P}=m,_="/api/odds/sync/route";function f(){return(0,n.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:h})}},25864:(e,t,r)=>{r.d(t,{s:()=>s});class a{constructor(){if(this.baseUrl="https://api.the-odds-api.com/v4",this.apiKey=process.env.ODDS_API_KEY||"",!this.apiKey)throw Error("ODDS_API_KEY environment variable is required")}async fetchOdds(e,t=["h2h","spreads","totals"]){try{let r=new URLSearchParams({apiKey:this.apiKey,sport:e,markets:t.join(","),regions:"us",oddsFormat:"american",dateFormat:"iso"}),a=await fetch(`${this.baseUrl}/sports/${e}/odds/?${r}`);if(!a.ok)throw Error(`Odds API error: ${a.status} ${a.statusText}`);let s=await a.json();return this.processOddsData(s)}catch(e){throw console.error("Error fetching odds:",e),e}}async fetchPlayerProps(e){try{return console.log(`Creating mock player props data for ${e}`),[{eventId:`player_props_${Date.now()}_1`,sport:this.mapSportName(e),league:"Player Props",participants:["Josh Allen","Buffalo Bills"],startTime:new Date(Date.now()+864e5),markets:[{marketType:"PLAYER_PASS_YDS",bookmaker:"DraftKings",odds:{over:{total:276,odds:-110},under:{total:276,odds:-110}}}]},{eventId:`player_props_${Date.now()}_2`,sport:this.mapSportName(e),league:"Player Props",participants:["Christian McCaffrey","San Francisco 49ers"],startTime:new Date(Date.now()+864e5),markets:[{marketType:"PLAYER_RUSH_YDS",bookmaker:"DraftKings",odds:{over:{total:96,odds:-105},under:{total:96,odds:-115}}}]}]}catch(e){throw console.error("Error fetching player props:",e),e}}async fetchSports(){try{let e=await fetch(`${this.baseUrl}/sports/?apiKey=${this.apiKey}`);if(!e.ok)throw Error(`Sports API error: ${e.status} ${e.statusText}`);return await e.json()}catch(e){throw console.error("Error fetching sports:",e),e}}processPlayerPropsData(e){return e.map(e=>{let t=[e.away_team,e.home_team],r=new Date(e.commence_time),a=e.bookmakers.flatMap(e=>e.markets.map(t=>({marketType:this.mapPlayerPropsMarketType(t.key),bookmaker:e.title,odds:this.processPlayerPropsOutcomes(t.outcomes,t.key)})));return{eventId:e.id,sport:this.mapSportName(e.sport_title),league:e.sport_title,participants:t,startTime:r,markets:a}})}processOddsData(e){return e.map(e=>{let t=[e.away_team,e.home_team],r=new Date(e.commence_time),a=e.bookmakers.flatMap(e=>e.markets.map(t=>({marketType:this.mapMarketType(t.key),bookmaker:e.title,odds:this.processMarketOutcomes(t.outcomes,t.key)})));return{eventId:e.id,sport:this.mapSportName(e.sport_title),league:e.sport_title,participants:t,startTime:r,markets:a}})}mapMarketType(e){return({h2h:"MONEYLINE",spreads:"SPREAD",totals:"TOTAL",btts:"PROPS"})[e]||"PROPS"}mapPlayerPropsMarketType(e){return({player_pass_tds:"PLAYER_PASS_TDS",player_pass_yds:"PLAYER_PASS_YDS",player_pass_completions:"PLAYER_PASS_COMPLETIONS",player_rush_yds:"PLAYER_RUSH_YDS",player_rush_att:"PLAYER_RUSH_ATT",player_rec_yds:"PLAYER_REC_YDS",player_rec_receptions:"PLAYER_REC_RECEPTIONS",player_rec_tds:"PLAYER_REC_TDS"})[e]||"PLAYER_PROPS"}mapSportName(e){return({Basketball:"NBA","American Football":"NFL",Baseball:"MLB",Soccer:"SOCCER",Hockey:"NHL",Tennis:"TENNIS"})[e]||e.toUpperCase()}processMarketOutcomes(e,t){return"h2h"===t?{home:this.roundOdds(e.find(t=>t.name===e[1]?.name)?.price||0),away:this.roundOdds(e.find(t=>t.name===e[0]?.name)?.price||0)}:"spreads"===t?{home:{spread:this.roundSpread(e.find(t=>t.name===e[1]?.name)?.point||0),odds:this.roundOdds(e.find(t=>t.name===e[1]?.name)?.price||0)},away:{spread:this.roundSpread(e.find(t=>t.name===e[0]?.name)?.point||0),odds:this.roundOdds(e.find(t=>t.name===e[0]?.name)?.price||0)}}:"totals"===t?{over:{total:this.preserveDecimal(e.find(e=>e.name.includes("Over"))?.point||0),odds:this.roundOdds(e.find(e=>e.name.includes("Over"))?.price||0)},under:{total:this.preserveDecimal(e.find(e=>e.name.includes("Under"))?.point||0),odds:this.roundOdds(e.find(e=>e.name.includes("Under"))?.price||0)}}:e}processPlayerPropsOutcomes(e,t){let r=e.find(e=>e.name.includes("Over")||e.name.includes("o")),a=e.find(e=>e.name.includes("Under")||e.name.includes("u"));return r&&a?{over:{total:this.preserveDecimal(r.point||0),odds:this.roundOdds(r.price||0)},under:{total:this.preserveDecimal(a.point||0),odds:this.roundOdds(a.price||0)}}:e}roundOdds(e){return Math.round(100*e)/100}roundSpread(e){return isNaN(e)||!isFinite(e)?0:Math.round(10*e)/10}preserveDecimal(e){return isNaN(e)||!isFinite(e)?0:e}async checkUsage(){try{let e=await fetch(`${this.baseUrl}/sports/?apiKey=${this.apiKey}`);if(!e.ok)throw Error(`Usage API error: ${e.status} ${e.statusText}`);return{used:1,remaining:499}}catch(e){throw console.error("Error checking API usage:",e),e}}}let s=new a},3214:(e,t,r)=>{r.d(t,{_:()=>s});var a=r(53524);let s=globalThis.prisma??new a.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[638,206],()=>r(71730));module.exports=a})();